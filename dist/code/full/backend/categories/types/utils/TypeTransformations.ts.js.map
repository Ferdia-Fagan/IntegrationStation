{"version":3,"file":"code/full/backend/categories/types/utils/TypeTransformations.ts.js","mappings":";;;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D","sources":["webpack://dist/webpack/bootstrap","webpack://dist/webpack/runtime/make namespace object","webpack://dist/./src/code/full/backend/categories/types/utils/TypeTransformations.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {FilteredKeysByNotType} from \"./Filtering\";\n\nexport type UnionToIntersection<U> =\n    (U extends any ? (k: U) => void : never) extends ((k: infer I) => void) ? I : never\nexport type WithoutFunctions<T> = {\n    [key in FilteredKeysByNotType<T, Function>]: T[key]\n}"],"names":[],"sourceRoot":""}